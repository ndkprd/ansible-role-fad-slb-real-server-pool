---

# do a HTTP Get request against the SLB Real Server Pool Member endpoint, using
# fad_slb_real_server_pool entry, where "name" is used as mkey, and  will
# output the json content of the entry
# if you want to skip this task, use --skip-tags "debug"
- name: Get the existing FAD SLB Real Server Pool Member entries.
  ansible.builtin.debug:
    msg: >
      {{ (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
      fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
      validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload') }}
  register: fad_slb_real_server_pool_get_results
  loop: "{{ fad_slb_real_server_pools | subelements('real_server_pool_members') }}"
  loop_control:
    loop_var: fad_slb_real_server_pool
    label: "{{ fad_slb_real_server_pool.1.real_server_name }} -> {{ fad_slb_real_server_pool.0.name }}"
  tags: [debug, get]

# will do HTTP Get request to check if entry exists or not, if not exists,
# will create new entry via HTTP Post via the SLB Real Server Pool Member endpoint,
# and will be skipped if entry already exist
# will fail if the returned paylod is not 0 (success) or -15 (duplicate entry)
# NOTE: the real server member must exists first
- name: Add FAD SLB Real Server Pool Member entry if not exist.
  ansible.builtin.uri:
    method: POST
    url: "{{ fad_api_endpoint.slb_real_server_pool_member }}&pkey={{ fad_slb_real_server_pool.0.name }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
    body: |
      {
        "mkey": "{{ fad_slb_real_server_pool.1.id | string }}",
        "address": "{{ fad_slb_real_server_pool.1.address | default('0.0.0.0') | string }}",
        "address6": "{{ fad_slb_real_server_pool.1.address6 | default('::') | string }}",
        "health_check_inherit": "{{ fad_slb_real_server_pool.1.health_check_inherit | default('enable') | string }}",
        "m_health_check": "{{ fad_slb_real_server_pool.1.m_health_check | default('disable') | string }}",
        "m_health_check_relationship": "{{ fad_slb_real_server_pool.1.m_health_check_relationship | default('AND') | string }}",
        "port": "{{ fad_slb_real_server_pool.1.port | default('80') | string }}",
        "weight": "{{ fad_slb_real_server_pool.1.weight | default('1') | string }}",
        "connlimit": "{{ fad_slb_real_server_pool.1.connlimit | default('0') | string }}",
        "recover": "{{ fad_slb_real_server_pool.1.recover | default('0') | string }}",
        "warmup": "{{ fad_slb_real_server_pool.1.warmup | default('0') | string }}",
        "warmrate": "{{ fad_slb_real_server_pool.1.warmrate | default('100') | string }}",
        "connection-rate-limit": "{{ fad_slb_real_server_pool.1.connection_rate_limit | default('0') | string }}",
        "status": "{{ fad_slb_real_server_pool.1.status | default('enable') | string }}",
        "ssl": "{{ fad_slb_real_server_pool.1.ssl | default('disable') | string }}",
        "rs_profile_inherit": "{{ fad_slb_real_server_pool.1.rs_profile_inherit | default('enable') | string }}",
        "backup": "{{ fad_slb_real_server_pool.1.backup | default('disable') | string }}",
        "hc_status": "{{ fad_slb_real_server_pool.1.hc_status | default('1') | string }}",
        "mysql_group_id": "{{ fad_slb_real_server_pool.1.mysql_group_id | default('0') | string }}",
        "mysql_read_only": "{{ fad_slb_real_server_pool.1.mysql_read_only | default('disable') | string }}",
        "proxy_protocol": "{{ fad_slb_real_server_pool.1.proxy_protocol | default('none') | string }}",
        "mssql_read_only": "{{ fad_slb_real_server_pool.1.mssql_read_only | default('disable' ) | string }}",
        "modify_host": "{{ fad_slb_real_server_pool.1.modify_host | default('enable') | string }}",
        "host": "{{ fad_slb_real_server_pool.0.name | default('host') | string }}",
        "m_health_check_list": "{{ fad_slb_real_server_pool.1.m_health_check_list| default([]) | join(' ') + ' ' | string }}",
        "cookie": "{{ fad_slb_real_server_pool.1.real_server_name | default('') | string }}",
        "real_server_id": "{{ fad_slb_real_server_pool.1.real_server_name | string }}"
      }
  register: fad_slb_real_server_pool_member_post_results
  loop: "{{ fad_slb_real_server_pools | subelements('real_server_pool_members') }}"
  loop_control:
    loop_var: fad_slb_real_server_pool
    label: "{{ fad_slb_real_server_pool.1.real_server_name }} -> {{ fad_slb_real_server_pool.0.name }}"
  when: >
      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
      fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
      validate_certs=false, split_lines=false, headers=fad_api_header) |
      from_json).get('payload').mkey is undefined
  changed_when: "fad_slb_real_server_pool_member_post_results.json.payload == 0"
  failed_when: "fad_slb_real_server_pool_member_post_results.json.payload not in [0, -15]"
  tags: [post]

# will do a HTTP Get request first, and then do HTTP Put request if entry already exists
# and there's a difference between existing data in the device in our configured vars
- name: Update FAD SLB Real Server Pool Member entry if entry exists and needs update.
  ansible.builtin.uri:
    method: PUT
    url:
      "{{ fad_api_endpoint.slb_real_server_pool_member }}&\
      pkey={{ fad_slb_real_server_pool.0.name }}&\
      mkey={{ fad_slb_real_server_pool.1.id }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
    body: |
      {
        "address": "{{ fad_slb_real_server_pool.1.address | default('0.0.0.0') | string }}",
        "address6": "{{ fad_slb_real_server_pool.1.address6 | default('::') | string }}",
        "health_check_inherit": "{{ fad_slb_real_server_pool.1.health_check_inherit | default('enable') | string }}",
        "m_health_check": "{{ fad_slb_real_server_pool.1.m_health_check | default('disable') | string }}",
        "m_health_check_relationship": "{{ fad_slb_real_server_pool.1.m_health_check_relationship | default('AND') | string }}",
        "port": "{{ fad_slb_real_server_pool.1.port | default('80') | string }}",
        "weight": "{{ fad_slb_real_server_pool.1.weight | default('1') | string }}",
        "connlimit": "{{ fad_slb_real_server_pool.1.connlimit | default('0') | string }}",
        "recover": "{{ fad_slb_real_server_pool.1.recover | default('0') | string }}",
        "warmup": "{{ fad_slb_real_server_pool.1.warmup | default('0') | string }}",
        "warmrate": "{{ fad_slb_real_server_pool.1.warmrate | default('100') | string }}",
        "connection-rate-limit": "{{ fad_slb_real_server_pool.1.connection_rate_limit | default('0') | string }}",
        "status": "{{ fad_slb_real_server_pool.1.status | default('enable') | string }}",
        "ssl": "{{ fad_slb_real_server_pool.1.ssl | default('disable') | string }}",
        "rs_profile_inherit": "{{ fad_slb_real_server_pool.1.rs_profile_inherit | default('enable') | string }}",
        "backup": "{{ fad_slb_real_server_pool.1.backup | default('disable') | string }}",
        "hc_status": "{{ fad_slb_real_server_pool.1.hc_status | default('1') | string }}",
        "mysql_group_id": "{{ fad_slb_real_server_pool.1.mysql_group_id | default('0') | string }}",
        "mysql_read_only": "{{ fad_slb_real_server_pool.1.mysql_read_only | default('disable') | string }}",
        "proxy_protocol": "{{ fad_slb_real_server_pool.1.proxy_protocol | default('none') | string }}",
        "mssql_read_only": "{{ fad_slb_real_server_pool.1.mssql_read_only | default('disable' ) | string }}",
        "modify_host": "{{ fad_slb_real_server_pool.1.modify_host | default('enable') | string }}",
        "host": "{{ fad_slb_real_server_pool.0.name | default('host') | string }}",
        "m_health_check_list": "{{ fad_slb_real_server_pool.1.m_health_check_list| default([]) | join(' ') + ' ' | string }}",
        "cookie": "{{ fad_slb_real_server_pool.1.real_server_name | default('') | string }}",
        "real_server_id": "{{ fad_slb_real_server_pool.1.real_server_name | string }}"
      }
  register: fad_slb_real_server_pool_member_put_results
  loop: "{{ fad_slb_real_server_pools | subelements('real_server_pool_members') }}"
  loop_control:
    loop_var: fad_slb_real_server_pool
    label: "{{ fad_slb_real_server_pool.1.real_server_name }} -> {{ fad_slb_real_server_pool.0.name }}"
  when: >
    (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
    fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
    validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').mkey is defined and
    (
      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').address !=
        fad_slb_real_server_pool.1.address | default('0.0.0.0') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').address6 !=
        fad_slb_real_server_pool.1.port | default('::') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').health_check_inherit !=
        fad_slb_real_server_pool.1.health_check_inherit | default('enable') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').m_health_check !=
        fad_slb_real_server_pool.1.m_health_check | default('disable') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').m_health_check_relationship !=
        fad_slb_real_server_pool.1.m_health_check_relationship | default('AND') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').port !=
        fad_slb_real_server_pool.1.port | default('80') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').weight !=
        fad_slb_real_server_pool.1.weight | default('1') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').connlimit !=
        fad_slb_real_server_pool.1.connlimit | default('0') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').recover !=
        fad_slb_real_server_pool.1.recover | default('0') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').warmup !=
        fad_slb_real_server_pool.1.warmup | default('0') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').warmrate !=
        fad_slb_real_server_pool.1.warmrate | default('100') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload')['connection-rate-limit'] !=
        fad_slb_real_server_pool.1.connection_rate_limit | default('0') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').status !=
        fad_slb_real_server_pool.1.status | default('enable') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').ssl !=
        fad_slb_real_server_pool.1.ssl | default('disable') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').rs_profile_inherit !=
        fad_slb_real_server_pool.1.rs_profile_inherit | default('enable') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').backup !=
        fad_slb_real_server_pool.1.backup | default('disable') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').hc_status !=
        fad_slb_real_server_pool.1.hc_status | default('1') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').mysql_group_id !=
        fad_slb_real_server_pool.1.mysql_group_id | default('0') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').mysql_read_only !=
        fad_slb_real_server_pool.1.mysql_read_only | default('disable') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').proxy_protocol !=
        fad_slb_real_server_pool.1.proxy_protocol | default('none') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').mssql_read_only !=
        fad_slb_real_server_pool.1.mssql_read_only | default('disable') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').modify_host !=
        fad_slb_real_server_pool.1.modify_host | default('enable') | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').host !=
        fad_slb_real_server_pool.0.name | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').m_health_check_list !=
        fad_slb_real_server_pool.1.health_check_list | default([]) | join(' ') + ' ' | string or

      (lookup('url', fad_api_endpoint.slb_real_server_pool_member + '&pkey=' +
        fad_slb_real_server_pool.0.name + '&mkey=' + fad_slb_real_server_pool.1.id | string,
        validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload').real_server_id !=
        fad_slb_real_server_pool.1.real_server_name | string
    )
  changed_when: "fad_slb_real_server_pool_member_put_results.json.payload == 0"
  failed_when: "fad_slb_real_server_pool_member_put_results.json.payload not in [0, -15]"
  tags: [put]
